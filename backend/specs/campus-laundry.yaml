openapi: "3.0.0"

info:
  version: 1.0.0
  title: Campus Laundry
  description: campus laundry is a capstone project for helping students free from the laundry

tags:
  - {name: "default", description: "Test API"}
  - {name: "Customer Login", description: "Customer Login Information API's"}
  - {name: "Customer Profile", description: "Customer Profile Information API's"}
  - {name: "Customer Order", description: "Customer Order Information API's"}
  - {name: "Laundry Items", description: "Laundry Items Information API's"}
  - {name: "Employees", description: "Employees Information API's"}

servers:
  - url: /campus-laundry


paths:
  /health:
    get:
      summary: Health Check of the services
      operationId: api.health.get
      responses:
        '200':
          description: Status message from server describing current health
          
          
  # Customer login Section
  
  /cl_get_customer_login:
    post:
      summary: customer login verification
      tags:
        - Customer Login
      description: |
        ## Customer login verification
        ---
        ### parameters
      operationId: api.cl_get_customer_login.post
      requestBody:
        required: true
        $ref: '#/components/requestBodies/login'
      responses:
        '200':
          $ref: '#/components/responses/login'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        'default':
          description: unexpected error
          
  
  /cl_set_customer_registration:
    post:
      summary: Set Service to save customer information
      tags:
        - Customer Login
      description: |
        ## Saving New Customer Details into database
        ---
        ### parameters
      operationId: api.cl_set_customer_registration.post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registration_input'
            examples:
              Test Example 1:
                value:
                  first_name: "Test Name"
                  last_name: "Test Name"
                  email: "test@test.com"
                  password: "test#123"
                  phone_number: null
              Test Example 2:
                value:
                  first_name: "Test Name 2"
                  last_name: "Test Name 2"
                  email: "test@example.com"
                  password: "test@123"
      responses:
        '200':
          description: save customer registration information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registration'
              examples:
                example1:
                  summary: Registration Successful
                  value:
                    header:
                      value:
                        error_code: 0
                        error_message: ""
                        status: 200
                        rows_returned: 1
                        time_taken: 0.74
                    results:
                      [ {
                        query_status: true,
                        message: "Registration Successful"
                      }]
                example2:
                  summary: User Already exists
                  value:
                    header:
                      value:
                        error_code: 0
                        error_message: ""
                        status: 200
                        rows_returned: 1
                        time_taken: 0.46
                    results:
                      [ {
                        query_status: false,
                        message: "Customer already exists"
                      }]
                example3:
                  summary: Error Inserting Data
                  value:
                    header:
                      value:
                        error_code: 0
                        error_message: ""
                        status: 200
                        rows_returned: 1
                        time_taken: 0.65
                    results:
                      [{
                        query_status: false,
                        message: "Something went wrong while inserting data"
                      }]
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        'default':
          description: unexpected error
          
          
  # Laundry Items Section
  
  /cl_get_laundry_items:
    post:
      summary: laundry dry clean prices
      tags:
        - Laundry Items
      description: |
        ## Laundry Product Prices
        ---
        ### parameters
      operationId: api.cl_get_laundry_items.post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/laundry_items_input'
            examples:
              Test Example 1:
                summary: Wash Items
                value:
                  wash: true
              Test Example 2:
                summary: Dry Clean Items
                value:
                  wash: false
      responses:
        '200':
          description: Successful list of products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/laundry_items'
              examples:
                example1:
                  summary: successful data retrieval
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 0.12
                    results:
                      [
                        {
                          "price": 8.05,
                          "product_fabric": "Cotton",
                          "product_id": 1,
                          "product_name": "T-Shirt"
                        },
                        {
                          "price": 6.25,
                          "product_fabric": "Polyester",
                          "product_id": 2,
                          "product_name": "T-Shirt"
                        }
                      ]
                    
              
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        'default':
          description: unexpected error
          
          
  
  # Customer Profile Section
  
  /cl_get_customer_details:
    post:
      summary: Customer Information
      tags:
        - Customer Profile
      description: |
        ## Customer Details
        ---
        ### parameters
        - email
      operationId: api.cl_get_customer_details.post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer_details_input'
            examples:
              Test Example 1:
                summary: Customer Information
                value:
                  email: test@test.com
      responses:
        '200':
          description: Customer Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer_details'
              examples:
                example1:
                  summary: successful data retrieval
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 0.12
                    results:
                      [
                        {
                          "customer_id": 1,
                          "date_of_birth": "1996-09-15",
                          "email": "test@test.com",
                          "first_name": "Test Name",
                          "gender": "M",
                          "last_name": "Test Name"
                        }
                      ]
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        'default':
          description: unexpected error
  
  /cl_set_customer_address:
    post:
      summary: Update Customer Address
      tags:
        - Customer Profile
      description: |
        ## Update Customer Address
        ---
        ### parameters
        
      operationId: api.cl_set_customer_address.post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/set_customer_address_input'
            examples:
              Test Example 1:
                summary: Customer Add New Address
                value:
                  customer_id: 2
                  street: '108 University Ave E'
                  city: 'waterloo'
                  province: 'ontario'
                  postal_code: 'N2K 0H4'
                  country: 'Canada'
                  latitude: -80.51752
                  longitude: 43.47886
                  address_id: null
              Test Example 2:
                summary: Customer & Address IDs Mismatched
                value:
                  customer_id: 1
                  street: '108 University Ave E'
                  city: 'waterloo'
                  province: 'ontario'
                  postal_code: 'N2K 0H4'
                  country: 'Canada'
                  latitude: -80.51752
                  longitude: 43.47886
                  address_id: 2
              Test Example 3:
                summary: Invalid Address Id
                value:
                  customer_id: 1
                  street: '108 University Ave E'
                  city: 'waterloo'
                  province: 'ontario'
                  postal_code: 'N2K 0H4'
                  country: 'Canada'
                  latitude: -80.51752
                  longitude: 43.47886
                  address_id: 1221092
              Test Example 4:
                summary: Address ID Update
                value:
                  customer_id: 2
                  street: '108 University Ave E'
                  city: 'waterloo'
                  province: 'ontario'
                  postal_code: 'N2J 2W2'
                  country: 'Canada'
                  latitude: -80.51752
                  longitude: 43.47886
                  address_id: 2
      responses:
        '200':
          description: Customer Update Address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/set_customer_address'
              examples:
                example1:
                  summary: Create Address
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 0.12
                    results: [
                        {
                          "message": "Successfully Created Address",
                          "query_status": true
                        }
                      ]
                example2:
                  summary: Update Address
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 0.12
                    results: [
                        {
                          "message": "Successfully Updated Address",
                          "query_status": true
                        }
                      ]
                example3:
                  summary: Customer & Address Ids Mismatched
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 0.12
                    results: [
                      {
                        "message": "Address id and customer id mismatch",
                        "query_status": false
                      }
                    ]
                example4:
                  summary: Invalid Address Id
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 0.12
                    results: [
                      {
                        "message": "Invalid Address Id",
                        "query_status": false
                      }
                    ]
                    
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        'default':
          description: unexpected error
      
      
  
  /cl_get_customer_address:
    post:
      summary: Get Customer Address List
      tags:
        - Customer Profile
      description: |
        ## Get Customer Address
        ---
        ### parameters
    
      operationId: api.cl_get_customer_address.post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_customer_address_input'
            examples:
              Test Example 1:
                summary: Get Customer Address
                value:
                  customer_id: 1
      responses:
        '200':
          description: Get Customer Address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_customer_address'
              examples:
                example1:
                  summary: Customer Address List
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 0.12
                    results: [
                        {
                          "address_id": 1,
                          "city": "waterloo",
                          "country": "Canada",
                          "customer_id": 1,
                          "postal_code": "N2K 0H4",
                          "province": "ontario",
                          "street": "108 University Ave E"
                        }
                      ]
                example2:
                  summary: Empty Customer Address List
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 0.12
                    results: []
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        'default':
          description: unexpected error
          
  
  /cl_set_customer_address_status:
    post:
      summary: Set Customer Address status
      tags:
        - Customer Profile
      description: |
        ## Set Customer Address Status
        ---
        ### parameters
    
      operationId: api.cl_set_customer_address_status.post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/set_customer_address_status_input'
            examples:
              Test Example 1:
                summary: Set Customer Address Status to Inactive
                value:
                  customer_id: 2
                  address_id: 1
                  active: false
              Test Example 2:
                summary: Set Customer Address Status to Active
                value:
                  customer_id: 2
                  address_id: 1
                  active: true
              Test Example 3:
                summary: Address Not Found
                value:
                  customer_id: 1
                  address_id: 1123123
                  active: false
      responses:
        '200':
          description: Set Customer Address Inactive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/set_customer_address_status'
              examples:
                example1:
                  summary: Set Customer Address Inactive
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 0.12
                    results: [
                      {
                        "message": "Address inactivated successfully",
                        "query_status": true
                      }
                    ]
                example2:
                  summary: Set Customer Address Active
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 0.12
                    results: [
                      {
                        "message": "Address activated successfully",
                        "query_status": true
                      }
                    ]
                example3:
                  summary: Customer Address Not Found
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 0.12
                    results: [
                      {
                        "message": "Address not found",
                        "query_status": false
                      }
                    ]
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        'default':
          description: unexpected error
          
          
          
          
          
  # Customer Order Details Section
  # Create Customer Order
  /cl_set_customer_order:
    post:
      summary: Create Customer Order
      tags:
        - Customer Order
      description: |
        ## Set Customer Order
        ---
        ### parameters
    
      operationId: api.cl_set_customer_order.post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/set_customer_order_input'
            examples:
              Test Example 1:
                summary: Set Customer Order
                value:
                  customer_id: 1
                  items_count: 1
                  total_price: 5.65
                  laundry_items: [{
                    product_id: 1,
                    quantity: 1,
                    price: 5,
                    laundry_type: 'wash'
                  }]
                  pickup_details: {
                    pickup_date: '2023-06-20',
                    pickup_time: '08:00:00',
                    address_id: 1
                  }
                  machine_settings: {
                    wash_type: 'normal',
                    water_temp: 'cold',
                    spin_speed: 'low'
                  }
                  order_weight: 10
              Test Example 2:
                summary: Set Customer Order Not Found
                value:
                  customer_id: 1
                  items_count: 1
                  total_price: 5.65
                  laundry_items: [ {
                    product_id: 1,
                    quantity: 1,
                    price: 5,
                    laundry_type: 'wash'
                  } ]
                  pickup_details: {
                    pickup_date: '2023-06-20',
                    pickup_time: '08:00:00',
                    address_id: 1
                  }
                  machine_settings: {
                    wash_type: 'heavy',
                    water_temp: 'cold',
                    spin_speed: 'low'
                  }
                  order_weight: 10
                  order_id: 20121232
              Test Example 3:
                summary: Update Customer Order with new item
                value:
                  customer_id: 1
                  items_count: 1
                  total_price: 5.65
                  laundry_items: [ {
                    product_id: 1,
                    quantity: 1,
                    price: 5,
                    laundry_type: 'wash'
                  }, {
                    product_id: 1,
                    quantity: 1,
                    price: 5,
                    laundry_type: 'iron'
                  } ]
                  pickup_details: {
                    pickup_date: '2023-06-20',
                    pickup_time: '08:00:00',
                    address_id: 1
                  }
                  machine_settings: {
                    wash_type: 'heavy',
                    water_temp: 'cold',
                    spin_speed: 'low'
                  }
                  order_weight: 10
                  order_id: 1
              Test Example 4:
                summary: Update Customer Order item price
                value:
                  customer_id: 1
                  items_count: 1
                  total_price: 5.65
                  laundry_items: [ {
                    product_id: 1,
                    quantity: 1,
                    price: 5,
                    laundry_type: 'wash'
                  }, {
                    product_id: 2,
                    quantity: 1,
                    price: 15,
                    laundry_type: 'iron'
                  } ]
                  pickup_details: {
                    pickup_date: '2023-06-20',
                    pickup_time: '08:00:00',
                    address_id: 1
                  }
                  machine_settings: {
                    wash_type: 'heavy',
                    water_temp: 'cold',
                    spin_speed: 'low'
                  }
                  order_weight: 10
                  order_id: 1
              Test Example 5:
                summary: Update Customer Order remove new item
                value:
                  customer_id: 1
                  items_count: 1
                  total_price: 5.65
                  laundry_items: [ {
                    product_id: 1,
                    quantity: 1,
                    price: 5,
                    laundry_type: 'wash'
                  }]
                  pickup_details: {
                    pickup_date: '2023-06-20',
                    pickup_time: '08:00:00',
                    address_id: 1
                  }
                  machine_settings: {
                    wash_type: 'heavy',
                    water_temp: 'cold',
                    spin_speed: 'low'
                  }
                  order_weight: 10
                  order_id: 1
              Test Example 6:
                summary: Update Customer Order duplicated products
                value:
                  customer_id: 1
                  items_count: 1
                  total_price: 5.65
                  laundry_items: [ {
                    product_id: 1,
                    quantity: 1,
                    price: 5,
                    laundry_type: 'wash'
                  }, {
                    product_id: 1,
                    quantity: 21,
                    price: 15,
                    laundry_type: 'wash'
                  } ]
                  pickup_details: {
                    pickup_date: '2023-06-20',
                    pickup_time: '08:00:00',
                    address_id: 1
                  }
                  machine_settings: {
                    wash_type: 'heavy',
                    water_temp: 'cold',
                    spin_speed: 'low'
                  }
                  order_weight: 10
                  order_id: 1
      responses:
        '200':
          description: Customer Order Created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/set_customer_address_status'
              examples:
                example1:
                  summary: Order Created successfully
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 0.12
                    results: [
                      {
                        "message": "Order Created Successfully",
                        "query_status": true,
                        "order_id": 1
                      }
                    ]
                example2:
                  summary: Order Id and Customer Id mismatched
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 143.22
                    results: [
                      {
                        "message": "order id and customer id is mismatch",
                        "order_id": 1,
                        "query_status": false
                      }
                    ]
                example3:
                  summary: Order Id creation failed
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 143.2
                    results: [
                      {
                        "message": "Failed to create order",
                        "order_id": null,
                        "query_status": false
                      }
                    ]
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        'default':
          description: unexpected error
          
  # Get Customer Order by ID
  /cl_get_customer_order_by_order_id:
    post:
      summary: Get Customer Order By Order ID
      tags:
        - Customer Order
      description: |
        ## Get Order By Order ID
        ---
        ### parameters
      
      operationId: api.cl_get_customer_order_by_order_id.post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_customer_order_by_id_input'
            examples:
              Test Example 1:
                summary: Get Customer Order by id
                value:
                  customer_id: 1
                  order_id: 1
              Test Example 2:
                summary: No Order for the Customer
                value:
                  customer_id: 1
                  order_id: 12313213
      responses:
        '200':
          description: Customer Order Retrieval Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_customer_order_by_id'
              examples:
                example1:
                  summary: Get Customer Order by id
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 1.12
                    results: [
                      {
                        "amount": 20,
                        "customer_id": 2,
                        "items_count": 2,
                        "order_date": "2023-07-07T21:56:42",
                        "order_id": 1,
                        "laundry_items": [{price: 5.0, quantity: 1, product_id: 1, laundry_type: wash}, {price: 15.0, quantity: 21, product_id: 2, laundry_type: wash}],
                        "pickup_details": {pickup_date: "2023-06-20", pickup_time: "08:00:00", address: "311 woolwich street, waterloo, ontario, canada, N2K 0H4"},
                        "machine_settings": {wash_type: "normal", water_temp: "cold", spin_speed: "low"},
                        "order_weight": 12.2,
                        "payment_status": "pending"
                      }
                    ]
                example2:
                  summary: No Order details found
                  value:
                    header:
                      error_code: 0
                      error_message: ""
                      status: 200
                      rows_returned: 1
                      time_taken: 1.12
                    results: [
                    
                    ]
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        'default':
          description: unexpected error
        
  # Get Customer Order History
  /cl_get_customer_orders_history:
    post:
      summary: Get Customer Orders History
      tags:
        - Customer Order
      description: |
        ## Get Customer Orders History
        ---
      operationId: api.cl_get_customer_orders_history.post
      requestBody:
        required: true
        $ref: '#/components/requestBodies/order_history'
      responses:
        '200':
          $ref: '#/components/responses/order_history'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
          
  
  # Employee Details
  /cl_get_employee_details:
    post:
      summary: Get employee details
      tags:
        - Employees
      description: |
        ## Get employee details
        ---
      operationId: api.cl_get_employee_details.post
      requestBody:
        required: true
        $ref: '#/components/requestBodies/employee_details'
      responses:
        '200':
          $ref: '#/components/responses/employee_details'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
          
  # Employee Login
  /cl_get_employee_login:
    post:
      summary: Get employee login
      tags:
        - Employees
      description: |
        ## Get employee login
        ---
      operationId: api.cl_get_employee_login.post
      requestBody:
        required: true
        $ref: '#/components/requestBodies/employee_login'
      responses:
        '200':
          $ref: '#/components/responses/employee_login'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
          
  
  /cl_get_order_list:
    post:
      summary: Get employee order list
      tags:
        - Employees
      description: |
        ## Get employee order list
        ---
      operationId: api.cl_get_order_list.post
      requestBody:
        required: true
        $ref: '#/components/requestBodies/order_list'
      responses:
        '200':
          $ref: '#/components/responses/order_list'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  
  /cl_get_orders_overview:
    get:
      summary: Get employee orders overview
      tags:
        - Employees
      description: |
        ## Get employee orders overview
        ---
      operationId: api.cl_get_orders_overview.get
      responses:
        '200':
          $ref: '#/components/responses/orders_overview'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
          
  /cl_set_order_status:
    post:
      summary: Set Order Status
      tags:
        - Employees
      description: |
        ## Set Order Status
        ---
      operationId: api.cl_set_order_status.post
      requestBody:
        required: true
        $ref: '#/components/requestBodies/set_order_status'
      responses:
        '200':
          $ref: '#/components/responses/set_order_status'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  
  /cl_set_payment_status:
    post:
      summary: Set Payment Status
      tags:
        - Employees
      description: |
        ## Set Payment Status
        ---
      operationId: api.cl_set_payment_status.post
      requestBody:
        required: true
        $ref: '#/components/requestBodies/set_payment_status'
      responses:
        '200':
          $ref: '#/components/responses/set_payment_status'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  
components:
  # Schemas
  schemas:
    # Common Schemas
    result_headers:
      type: object
      properties:
        error_code:
          type: integer
          description: custom application error code
        error_message:
          type: string
          description: custom application error message
        rows_returned:
          type: integer
          description: total number of rows returned from database
        status:
          type: integer
          description: status code of the operation
        time_taken:
          type: number
          description: total time taken for the operation
    bad_request:
      type: object
      properties:
        header:
          type: object
          properties:
            error_code:
              type: integer
              default: 4000
            error_message:
              type: string
              default: "'' is a required property"
            rows_returned:
              type: integer
              default: 0
            status:
              type: integer
              default: 400
            time_taken:
              type: number
        results:
          type: array
          default: []
          
    internal_server:
      type: object
      properties:
        header:
          type: object
          properties:
            error_code:
              type: integer
              default: 5000
            error_message:
              type: string
              default: "Something went wrong !!!"
            status:
              type: integer
              default: 500
            rows_returned:
              type: integer
            time_taken:
              type: number
              default: 0
        results:
          type: array
          default: []
      
      
    
    # login Section
    login:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/login_results'
    login_input:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          pattern: ^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$
          default: "test@test.com"
        password:
          type: string
          minLength: 1
          default: "Test#123"
      required:
        - email
        - password
    login_results:
      type: object
      properties:
        query_status:
          type: boolean
          default: true
        message:
          type: string
          default: "Login successful"
        customer_id:
          type: integer
          default: 1
          nullable: true
          
    
    # Registration Section
    registration:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/registration_results'
    registration_input:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          pattern: ^[a-zA-Z ]+$
          default: "Test Name"
        last_name:
          type: string
          minLength: 1
          pattern: ^[a-zA-Z ]+$
          default: "Test Name"
        email:
          type: string
          format: email
          minLength: 1
          pattern: ^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$
          default: "test@test.com"
        password:
          type: string
          minLength: 1
          default: "Test#123"
        phone_number:
          type: string
          minLength: 10
          maxLength: 10
          nullable: true
      required:
        - first_name
        - last_name
        - email
        - password
        - phone_number
    registration_results:
      type: object
      properties:
        query_status:
          type: boolean
          default: true
        message:
          type: string
          default: "Registration successful"
    
    # Laundry Dry Clean Prices
    laundry_items_input:
      type: object
      properties:
        wash:
          type: boolean
      required:
        - wash
    laundry_items:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/laundry_items_results'
    laundry_items_results:
      type: object
      properties:
        product_id:
          type: integer
        product_name:
          type: string
        product_fabric:
          type: string
          nullable: true
        price:
          type: number
          nullable: true
        
        
        
   
    # Customer Information Section
    customer_details_input:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          pattern: ^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$
          default: "test@test.com"
      required:
        - email
    customer_details:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/customer_details_results'
    customer_details_results:
      type: object
      properties:
        customer_id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        date_of_birth:
          type: string
          nullable: true
        gender:
          type: string
          minimum: 1
          maximum: 1
          nullable: true
          
    
    # Customer Set Address
    set_customer_address_input:
      type: object
      properties:
        customer_id:
          type: integer
          default: 2
        street:
          type: string
          default: '108 University Ave E'
        city:
          type: string
          default: 'waterloo'
        province:
          type: string
          default: 'ontario'
        postal_code:
          type: string
          default: 'N2K 0H4'
        country:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        address_id:
          type: integer
          nullable: true
      required:
        - customer_id
        - street
        - city
        - province
        - postal_code
        - country
        - latitude
        - longitude
        - address_id
          
        
    set_customer_address:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/set_customer_address_results'
    set_customer_address_results:
      type: object
      properties:
        query_status:
          type: boolean
        message:
          type: string
      
      
      
    
    # Customer Get Address
    get_customer_address_input:
      type: object
      properties:
        customer_id:
          type: integer
          default: 2
      required:
        - customer_id
    get_customer_address:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/get_customer_address_results'
    get_customer_address_results:
      type: object
      properties:
        address_id:
          type: integer
        customer_id:
          type: integer
        street:
          type: string
        city:
          type: string
        province:
          type: string
        country:
          type: string
        postal_code:
          type: string
          
    
    # Customer Address Status
    set_customer_address_status_input:
      type: object
      properties:
        customer_id:
          type: integer
        address_id:
          type: integer
        active:
          type: boolean
          
      required:
        - customer_id
        - address_id
        - active
    set_customer_address_status:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/set_customer_address_status_results'

    set_customer_address_status_results:
      type: object
      properties:
        query_status:
          type: boolean
        message:
          type: string
          
    
    # Customer Create Order
      # INPUTS
    set_customer_order_input:
      type: object
      properties:
        customer_id:
          type: integer
        items_count:
          type: integer
        total_price:
          type: number
        laundry_items:
          type: array
          items:
            $ref: '#/components/schemas/order_laundry_items'
        pickup_details:
          $ref: '#/components/schemas/order_pickup_details'
          example: {"pickup_date": "2023-06-20", "pickup_time": "07:00:00", "address_id": 1}
        machine_settings:
          $ref: '#/components/schemas/order_machine_settings'
          example: { "wash_type": "normal", "water_temp": "cold", "spin_speed": "low" }
        order_weight:
          type: number
          nullable: true
        subscribed_id:
          type: integer
          nullable: true
        order_id:
          type: integer
          nullable: true
      required:
        - customer_id
        - items_count
        - total_price
        - laundry_items
        - pickup_details
        - machine_settings
        - order_weight
    order_laundry_items:
      type: object
      properties:
        product_id:
          type: integer
        quantity:
          type: integer
        price:
          type: number
        laundry_type:
          type: string
      required:
        - product_id
        - quantity
        - price
        - laundry_type
    order_pickup_details:
      type: object
      properties:
        pickup_date:
          type: string
          format: date
          pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
          example: 'yyyy-mm-dd (e.g., 2022-01-01)'
        pickup_time:
          type: string
          pattern: '^[0-9]{2}:[0-9]{2}:[0-9]{2}$'
          example: 'hh:mm:ss (e.g., 12:34:56)'
        address_id:
          type: integer
      required:
        - pickup_date
        - pickup_time
        - address_id
    order_machine_settings:
      type: object
      properties:
        wash_type:
          type: string
          example: 'normal'
        water_temp:
          type: string
          example: 'cold'
        spin_speed:
          type: string
          example: 'low'
      required:
        - wash_type
        - water_temp
        - spin_speed
        

      # Calling API
    set_customer_order:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/set_customer_order_results'
    set_customer_order_results:
      type: object
      properties:
        query_status:
          type: boolean
        message:
          type: string
        order_id:
          type: integer
          nullable: true
          
          
    
    # Employee Details
    employee_details:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/employee_details_results'
    employee_details_input:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          pattern: ^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$
          default: "admin@campuslaundry.com"
      required:
        - email
    employee_details_results:
      type: object
      properties:
        emp_id:
          type: integer
          default: 1
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
  
    # Employee Login
    employee_login:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/employee_login_results'
    employee_login_input:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          pattern: ^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$
          default: "admin@campuslaundry.com"
        password:
          type: string
          minLength: 1
          default: "Test#123"
        role:
          type: string
          pattern: ^(admin|delivery)$
      required:
        - email
        - password
        - role
    employee_login_results:
      type: object
      properties:
        query_status:
          type: boolean
          default: true
        message:
          type: string
          default: "Login successful"
        emp_id:
          type: integer
          default: 1
        
    
    # Employee Order List
    order_list:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/order_list_results'
    order_list_input:
      type: object
      properties:
        order_status:
          type: string
          minLength: 1
          pattern: ^(pending|completed)$
          default: "pending"
      required:
        - order_status
    order_list_results:
      type: object
      properties:
        order_id:
          type: integer
          default: 1
        customer_id:
          type: integer
          default: 1
        items_count:
          type: integer
        order_status:
          type: string
        order_date:
          type: string
        address:
          type: string
  
    # Employee Order Overview
    orders_overview:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/orders_overview_results'
    orders_overview_results:
      type: object
      properties:
        today_order_count:
          type: integer
          default: 1
        today_revenue:
          type: number
          default: 1.2
        total_revenue:
          type: number
          
    # Set Order Status
    set_order_status:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/set_order_status_results'
    set_order_status_input:
      type: object
      properties:
        order_id:
          type: integer
          default: 1
        customer_id:
          type: integer
          default: 1
        order_status:
          type: string
          minLength: 1
          default: "created"
      required:
        - order_id
        - order_status
    set_order_status_results:
      type: object
      properties:
        order_id:
          type: integer
          default: 1
        query_status:
          type: boolean
        message:
          type: string
    
    # Set Payment Status
    set_payment_status:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/set_payment_status_results'
    set_payment_status_input:
      type: object
      properties:
        order_id:
          type: integer
          default: 1
        customer_id:
          type: integer
          default: 1
        payment_status:
          type: string
          minLength: 1
          default: "created"
      required:
        - order_id
        - payment_status
    set_payment_status_results:
      type: object
      properties:
        order_id:
          type: integer
          default: 1
        query_status:
          type: boolean
        message:
          type: string
  
    # Customer Get Order Details BY Order ID
    get_customer_order_by_id_input:
      type: object
      properties:
        customer_id:
          type: integer
        order_id:
          type: integer
      required:
        - customer_id
        - order_id
    get_customer_order_by_id:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/get_customer_order_by_id_results'
    get_customer_order_by_id_results:
      type: object
      properties:
        customer_id:
          type: integer
        items_count:
          type: integer
        laundry_items:
          type: array
          items:
            $ref: '#/components/schemas/order_laundry_items'
        order_date:
          type: string
          format: datetime
        order_id:
          type: integer
        order_weight:
          type: number
        payment_date:
          type: string
        payment_status:
          type: string
        pickup_details:
          type: object
          properties:
            address:
              type: string
            pickup_date:
              type: string
            pickup_time:
              type: string
        machine_settings:
          type: object
          properties:
            wash_type:
              type: string
            water_temp:
              type: string
            spin_speed:
              type: string
        total_price:
          type: number
          
    
    # Customer Get Order History
    get_customer_orders_history_input:
      type: object
      properties:
        customer_id:
          type: integer
      required:
        - customer_id
    get_customer_orders_history:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/result_headers'
        results:
          type: array
          items:
            $ref: '#/components/schemas/get_customer_orders_history_results'
    get_customer_orders_history_results:
      type: object
      properties:
        order_id:
          type: integer
        customer_id:
          type: integer
        items_count:
          type: integer
        order_date:
          type: string
          format: datetime
        order_weight:
          type: number
        payment_date:
          type: string
        payment_status:
          type: string
        total_price:
          type: number
       
  
  # Request Bodies
  requestBodies:
    # Login
    login:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/login_input'
          examples:
            Test Example 1:
              $ref: '#/components/examples/login_input_1'
            Test Example 2:
              $ref: '#/components/examples/login_input_2'
    # Order History
    order_history:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/get_customer_orders_history_input'
          examples:
            Test Example 1:
              $ref: '#/components/examples/order_history_input_1'
    # Employee Details
    employee_details:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/employee_details_input'
          examples:
            Test Example 1:
              $ref: '#/components/examples/employee_details_input_1'
            Test Example 2:
              $ref: '#/components/examples/employee_details_input_2'
              
    # Employee Login
    employee_login:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/employee_login_input'
          examples:
            Test Example 1:
              $ref: '#/components/examples/employee_login_input_1'
            Test Example 2:
              $ref: '#/components/examples/employee_login_input_2'
    # Employee Order list
    order_list:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/order_list_input'
          examples:
            Test Example 1:
              $ref: '#/components/examples/order_list_input_1'
            Test Example 2:
              $ref: '#/components/examples/order_list_input_2'
              
    # Set Order Status
    set_order_status:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/set_order_status_input'
          examples:
            Test Example 1:
              $ref: '#/components/examples/set_order_status_input_1'
            Test Example 2:
              $ref: '#/components/examples/set_order_status_input_2'
              
    
    # Set Payment Status
    set_payment_status:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/set_payment_status_input'
          examples:
            Test Example 1:
              $ref: '#/components/examples/set_payment_status_input_1'
            Test Example 2:
              $ref: '#/components/examples/set_payment_status_input_2'
    
  
  # Responses
  responses:
    400:
      description: BAD Request for Input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bad_request'
    500:
      description: Internal Server for Input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/internal_server'
    login:
      description: login verification
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/login'
          examples:
            example1:
              summary: Login Successful
              $ref: '#/components/examples/login_output_1'
            example2:
              summary: Incorrect Password
              $ref: '#/components/examples/login_output_2'
            example3:
              summary: Email not found
              $ref: '#/components/examples/login_output_3'
    order_history:
      description: Customer Order History Retrieval
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/get_customer_orders_history'
          examples:
            Test Example 1:
              $ref: '#/components/examples/order_history_output_1'
            Test Example 2:
              $ref: '#/components/examples/order_history_output_2'
              
    employee_details:
      description: Employee details Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/employee_details'
          examples:
            Test Example 1:
              $ref: '#/components/examples/employee_details_output_1'
            Test Example 2:
              $ref: '#/components/examples/employee_details_output_2'
    employee_login:
      description: Employee details Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/employee_login'
          examples:
            Test Example 1:
              $ref: '#/components/examples/employee_login_output_1'
            Test Example 2:
              $ref: '#/components/examples/employee_login_output_2'
            Test Example 3:
              $ref: '#/components/examples/employee_login_output_3'
            
            
    order_list:
      description: Employee Order list Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/order_list'
          examples:
            Test Example 1:
              $ref: '#/components/examples/order_list_output_1'
            Test Example 2:
              $ref: '#/components/examples/order_list_output_2'
            Test Example 3:
              $ref: '#/components/examples/order_list_output_3'
    orders_overview:
      description: Employee Order Overview Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orders_overview'
          examples:
            Test Example 1:
              $ref: '#/components/examples/orders_overview_output_1'
            Test Example 2:
              $ref: '#/components/examples/orders_overview_output_2'
    set_order_status:
      description: Set Order Status
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/set_order_status'
          examples:
            Test Example 1:
              $ref: '#/components/examples/set_order_status_output_1'
            Test Example 2:
              $ref: '#/components/examples/set_order_status_output_2'
    set_payment_status:
      description: Set Payment Status
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/set_payment_status'
          examples:
            Test Example 1:
              $ref: '#/components/examples/set_payment_status_output_1'
            Test Example 2:
              $ref: '#/components/examples/set_payment_status_output_2'
  
  # Examples
  examples:
    # Login
    login_input_1:
      summary: Login Successful Input
      value:
        email: "test@test.com"
        password: "Test#123"
    login_input_2:
      summary: Login Failure Input
      value:
        email: "test@test.com"
        password: "test#123"
    login_output_1:
      summary: Login Successful
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.74
        results:
          [ {
            query_status: true,
            message: "Login successful",
            customer_id: 1
          } ]
    login_output_2:
      summary: Incorrect Password
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.28
        results:
          [ {
            query_status: false,
            message: "Incorrect password",
            customer_id: 0
          } ]
    login_output_3:
      summary: Email not found
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.12
        results:
          [ {
            query_status: false,
            message: "Email not found",
            customer_id: 0
          } ]
        
        
    # Order History
    order_history_input_1:
      summary: Order Valid Input
      value:
        customer_id: 1
    order_history_input_2:
      summary: Order Invalid Input
      value:
        customer_id: 2123123
    order_history_output_1:
      summary: Order History List
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.74
        results:
          [
            {
              "customer_id": 1,
              "items_count": 1,
              "order_date": "2023-07-09T18:39:23",
              "order_id": 1,
              "order_weight": 10,
              "payment_date": "2023-07-09T18:39:23",
              "payment_status": "pending",
              "total_price": 5.65
            }
          ]
        
    order_history_output_2:
      summary: Order History Empty List
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.74
        results: []
        
    # Employee Details
    employee_details_input_1:
      summary: Employee details Admin
      value:
        email: admin@campuslaundry.com
    employee_details_input_2:
      summary: Employee details Delivery
      value:
        email: prem@campuslaundry.com
    employee_details_output_1:
      summary: Employee Details Output - Valid Data
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.74
        results: [{
          "email": "admin@campuslaundry.com",
          "emp_id": 1,
          "first_name": "Campus",
          "last_name": "Laundry",
          "phone_number": "8889999999"
        }]
    employee_details_output_2:
      summary: Employee Details Output - Empty List
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.74
        results: []
        
        
        
    # Employee Login
    employee_login_input_1:
      summary: Employee login Admin
      value:
        email: admin@campuslaundry.com
        password: Admin#123@123
        role: admin
    employee_login_input_2:
      summary: Employee login Delivery
      value:
        email: prem@campuslaundry.com
        password: Abc#123@123
        role: delivery
    employee_login_output_1:
      summary: Employee Details Output
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.74
        results: [{
          "emp_id": 1,
          "message": "Login successful",
          "query_status": true
        }]
    employee_login_output_2:
      summary: Incorrect Password or role mismatch
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.28
        results:
          [ {
            query_status: false,
            message: "Incorrect password or role mismatch",
            emp_id: 0
          } ]
    employee_login_output_3:
      summary: Email not found
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.12
        results:
          [ {
            query_status: false,
            message: "Email not found",
            emp_id: 0
          } ]
    # Employee Order list
    order_list_input_1:
      summary: Employee new orders List
      value:
        order_status: pending
    order_list_input_2:
      summary: Employee completed orders List
      value:
        order_status: completed
    order_list_output_1:
      summary: Employee new orders list output
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.74
        results: [ {
          "address": "311 Woolwich St,Waterloo,Ontario,Canada,N2K 0H4",
          "customer_id": 1,
          "items_count": 1,
          "order_date": "2023-07-09T18:39:23",
          "order_id": 1,
          "order_status": "created"
        } ]
    order_list_output_2:
      summary: Employee completed orders list output
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.28
        results:
          [ {
          "address": "311 Woolwich St,Waterloo,Ontario,Canada,N2K 0H4",
          "customer_id": 1,
          "items_count": 1,
          "order_date": "2023-07-09T18:39:23",
          "order_id": 1,
          "order_status": "completed"
        } ]
    order_list_output_3:
      summary: Empty order list
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.12
        results:
          [ ]
  
    # Employee Order Overview
    orders_overview_output_1:
      summary: Employee Order overview having revenue output
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.74
        results: [ {
            "today_order_count": 1,
            "today_revenue": 1,
            "total_revenue": 5.65
          } ]
    orders_overview_output_2:
      summary: Employee Order overview empty
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.28
        results:
          [ {
            "today_order_count": 0,
            "today_revenue": 0,
            "total_revenue": 0
          } ]
  
    # Set Order Status
    set_order_status_input_1:
      summary: Set Order Status - Waiting for pickup
      value:
        order_id: 1
        order_status: waiting for pickup
        customer_id: 1
    set_order_status_input_2:
      summary: Set Order Status - Invalid Order Id
      value:
        order_id: 1123
        order_status: in wash
        customer_id: 1
    set_order_status_output_1:
      summary: Set Order Status output - Success
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.74
        results: [ {
          "query_status": true,
          "message": "Order updated successfully",
          "order_id": 1
        } ]
    set_order_status_output_2:
      summary: Set Order Status output - Failed
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.28
        results:
          [ {
            "query_status": false,
            "message": "order id and customer id mismatch",
            "order_id": 1
          } ]
  
    # Set Order Status
    set_payment_status_input_1:
      summary: Set Payment Status - Success
      value:
        order_id: 1
        payment_status: success
        customer_id: 1
    set_payment_status_input_2:
      summary: Set Payment Status - Invalid Order Id
      value:
        order_id: 1123
        payment_status: success
        customer_id: 1
    set_payment_status_output_1:
      summary: Set Payment Status output - Success
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.74
        results: [ {
          "query_status": true,
          "message": "Payment updated successfully",
          "order_id": 1
        } ]
    set_payment_status_output_2:
      summary: Set Payment Status output - Failed
      value:
        header:
          error_code: 0
          error_message: ""
          status: 200
          rows_returned: 1
          time_taken: 0.28
        results:
          [ {
            "query_status": false,
            "message": "order id and customer id mismatch",
            "order_id": 1
          } ]
    


    
  
